version: "3.8"
services:
  langchat-db:
    image: postgres:15.2
    environment:
      - POSTGRES_DB=langchat
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    ports:
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "langchat", "-U", "langteam" ]
      interval: 10s
      timeout: 5s
      retries: 5

  langchat-flyway:
    image: narutosimaha/flyway-langchat
    # command: -url=jdbc:postgresql://postgres:5432/ejabberd -user=ejabberd -password=ejabberd_password -connectRetries=60 migrate
    environment:
      - DATABASE_NAME=langchat
      - DATABASE_URL=jdbc:postgresql://langchat-db:5432
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    # volumes:
    #   - ./lec-db/langchat/sql:/flyway/sql
    depends_on:
      - langchat-db
    
  langgeneral-db:
    image: postgres:15.2
    environment:
      - POSTGRES_DB=langgeneral
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    ports:
      - 5434:5432
    volumes:
      - pgdata1:/var/lib/postgresql/data
    restart: always
    # healthcheck:
    #   test: [ "CMD", "pg_isready", "-q", "-d", "langchat", "-U", "langteam" ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

      
  langgeneral-flyway:
    image: narutosimaha/flyway-langgeneral
    # command: -url=jdbc:postgresql://postgres:5432/ejabberd -user=ejabberd -password=ejabberd_password -connectRetries=60 migrate
    environment:
      - DATABASE_NAME=langgeneral
      - DATABASE_URL=jdbc:postgresql://langgeneral-db:5432
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    # volumes:
    #   - ./lec-db/langchat/sql:/flyway/sql
    depends_on:
      - langgeneral-db
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"

  # Topics
  #   1. Personal info update.
  #   2. Friend relationship update: friend and unfriend.
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  # init-kafka:
  #   image: confluentinc/cp-kafka:7.3.2
  #   depends_on:
  #     - kafka
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     "
  #     # blocks until kafka is reachable
  #     kafka-topics --bootstrap-server broker:29092 --list

  #     echo -e 'Creating kafka topics'
  #     kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic chathelper-friendstate --replication-factor 1 --partitions 1
  #     kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic chathelper-userupdate --replication-factor 1 --partitions 1

  #     echo -e 'Successfully created the following topics:'
  #     kafka-topics --bootstrap-server broker:29092 --list
  #     "

  celery-broker:
    image: redis
    ports:
      - "6379:6379"


  ##THUONG SERVICE
  consul:
    image: consul:${TAG:-latest}
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    restart: always
    ports:
    - "8500:8500"

  le-file-service:
    image: thuongnguyen158/le-file-service:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      S3_BUCKET_NAME: language-exchanged
      AWS_ACCESS_KEY_ID: AKIA5RKKGIJL6UQB7W4J
      AWS_SECRET_ACCESS_KEY: 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
      MINIO_HOST: http://127.0.0.1:9000
      CONSUL_URL: http://consul:8500

    depends_on:
      - consul
    restart: always
    ports:
    - "5000:80"
  ###############
  # access url to see http://localhost:5002/swagger/index.html
  le-user-service:
    image: thuongnguyen158/le-user-service:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CONSUL_URL: http://consul:8500
      DB_CONNECTION_STRING: Host=langgeneral-db;Port=5432;Database=langgeneral;Username=langteam;Password=Aa1234
      SECRET_KEY: 'aAa01234567890aAa'
      NEO4J_DATABASE: neo4j
      NEO4J_HOST: bolt://54.151.158.181:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: t0ps3cr3tt0ps3cr3t
      CHAT_DOMAIN: localhost
      MESSAGE_BUS_HOST: kafka:9092
      HOST_PREFIX: ""
    
    depends_on:
      - consul
      - kafka
    restart: always
    ports:
      - "5002:80"


volumes:
  pgdata:
  pgdata1: